При обнаружении совпадения с символами, составляющими слово, требуется определить, является ли оно отдельным словом, а не частью другого. (Это один из возможных вариантов решения задачи, не самый лучший. Другой вариант – сначала выделить слово, а затем сравнивать его с заданным). Например, мы задали слово «кот». Эта последовательность символов содержится, например, в словах «котенок», «трикотаж», «трескотня» и «апперкот». Следовательно, требуется проверить символ, стоящий после слова, а в случае, когда слово не находится в начале строки — еще и символ перед словом. Эти символы проверяются на принадлежность множеству знаков пунктуации и разделителей.
III. Программа и тестовые примеры
Разобьем написание программы на последовательность шагов.
Шаг 1. Ввести «скелет» программы (директивы #include, функцию main(), описа¬ние переменных, открытие файла). Добавить контрольный вывод введенного слова. Запустив программу, проверить ввод слова и успешность открытия файла. Для проверки вывода сообщения об ошибке следует выполнить программу еще раз, задав имя несуществующего файла.
#include <fstream.h>
int main()
{
const int len = 81;
char word[len],line[len];
cout << " Input the word for search:  ";
cin >> word;
ifstream fin("text.txt",ios::in);
if (!fin) {
   cout << "Error of file opening."<< endl;
   return 1; }
return 0;
} qqqqqqqqqqqqqqqqqq
Шаг 2. Добавить в программу цикл чтения из файла, внутри цикла поставить контрольный вывод считанной строки:
#include <fstream.h>
int main()
